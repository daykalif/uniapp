{"version":3,"file":"utils.js","sources":["common/js/utils.js"],"sourcesContent":["class Utils {\r\n\tconstructor() {\r\n\t\t// this.baseUrl = 'http://159.75.169.224:7300/pz'\r\n\t\tthis.baseUrl = 'https://code.itndedu.com/pz'\r\n\t}\r\n\r\n\t// 获取用户信息\r\n\tgetUserInfo() {\r\n\t\t// 调用登录的api\r\n\t\tuni.login({\r\n\t\t\tsuccess: (res) => {\r\n\t\t\t\tconsole.log('调用登录的api==>', res);\r\n\r\n\t\t\t\tthis.request({\r\n\t\t\t\t\turl: '/auth/wxLogin',\r\n\t\t\t\t\tmethod: 'GET',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tcode: res.code\r\n\t\t\t\t\t},\r\n\t\t\t\t\tisShowLoading: true,\r\n\t\t\t\t\tsuccess: (res) => {\r\n\t\t\t\t\t\tconsole.log(res, 'request res');\r\n\t\t\t\t\t},\r\n\t\t\t\t\tfail: (err) => {\r\n\t\t\t\t\t\tconsole.log(err, 'request err');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t})\r\n\r\n\t\t\t\tthis.request({\r\n\t\t\t\t\turl: '/auth/wxLogin',\r\n\t\t\t\t\tmethod: 'GET',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tcode: res.code\r\n\t\t\t\t\t},\r\n\t\t\t\t\tisShowLoading: true,\r\n\t\t\t\t\tsuccess: (res) => {\r\n\t\t\t\t\t\tconsole.log(res, 'request res');\r\n\t\t\t\t\t},\r\n\t\t\t\t\tfail: (err) => {\r\n\t\t\t\t\t\tconsole.log(err, 'request err');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t})\r\n\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\r\n\t/**\r\n\t* 调用说明：\r\n\t* 当同时存在 2 个请求发起，且 isShowLoading 都为 true 时，下面详细描述代码的执行顺序：\r\n\t\t前提条件\r\n\t\t\t代码运行在 uni-app 框架中，使用 uni.getStorageSync 和 uni.setStorageSync 进行本地存储操作，uni.showLoading 和 uni.hideLoading 用于显示和隐藏加载动画。\r\n\t\t\t初始状态下，本地存储中 isShowLoading 的值为 false。\r\n\t\t\r\n\t\t执行顺序步骤\r\n\t\t\r\n\t\t\t第一个请求发起\r\n\t\t\t\t调用 request 方法：\r\n\t\t\t\t\t传入的 option 中 isShowLoading 为 true，并且 option.url 存在（假设满足条件）。\r\n\t\t\t\t\t由于 option.isShowLoading 为 true，调用 this.showLoadingFun() 方法。\r\n\t\t\t\t\t执行 showLoadingFun 方法：\r\n\t\t\t\t\t通过 uni.getStorageSync('isShowLoading') 获取本地存储的值，此时为 false，所以不会执行隐藏加载动画的逻辑。\r\n\t\t\t\t\t调用 uni.showLoading 显示加载动画，设置 title 为 “加载中...”。\r\n\t\t\t\t\tuni.showLoading 执行完成后，触发 complete 回调，在回调中使用 uni.setStorageSync('isShowLoading', true) 将本地存储中的 isShowLoading 设置为 true，表示加载动画正在显示。\r\n\t\t\t第二个请求发起\r\n\t\t\t\t调用 request 方法：\r\n\t\t\t\t\t同样传入的 option 中 isShowLoading 为 true，且 option.url 存在。\r\n\t\t\t\t\t因为 option.isShowLoading 为 true，再次调用 this.showLoadingFun() 方法。\r\n\t\t\t\t\t执行 showLoadingFun 方法：\r\n\t\t\t\t\t通过 uni.getStorageSync('isShowLoading') 获取本地存储的值，此时为 true，说明已有加载动画正在显示。\r\n\t\t\t\t\t执行 uni.hideLoading() 隐藏当前的加载动画，然后使用 uni.setStorageSync('isShowLoading', false) 将本地存储中的 isShowLoading 设置为 false。\r\n\t\t\t\t\t接着调用 uni.showLoading 显示新的加载动画，设置 title 为 “加载中...”。\r\n\t\t\t\t\tuni.showLoading 执行完成后，触发 complete 回调，在回调中使用 uni.setStorageSync('isShowLoading', true) 将本地存储中的 isShowLoading 再次设置为 true，表示新的加载动画正在显示。\r\n\t\t\t\t\t\r\n\t\t综上所述，在同时发起两个请求且 isShowLoading 都为 true 的情况下，会先显示第一个加载动画，当第二个请求发起时，会先隐藏第一个加载动画，再显示新的加载动画，始终保证页面上最多只有一个加载动画显示。\r\n\t*/\r\n\trequest(option = {\r\n\t\tisShowLoading: false\r\n\t}) {\r\n\t\t// 如果请求地址为空，则返回出去\r\n\t\tif (!option.url) return false\r\n\r\n\t\t// 如果参数中存在动画，则启用自定义动画\r\n\t\tif (option.isShowLoading) {\r\n\t\t\tthis.showLoadingFun()\r\n\t\t}\r\n\r\n\t\tuni.request({\r\n\t\t\turl: this.baseUrl + option.url,\r\n\t\t\tdata: option.data ? option.data : {},\r\n\t\t\theader: option.header ? option.header : {},\r\n\t\t\tmethod: option.method ? option.method : 'GET',\r\n\t\t\t// 请求成功\r\n\t\t\tsuccess: (response) => {\r\n\t\t\t\t// 关闭加载效果\r\n\t\t\t\tuni.hideLoading()\r\n\t\t\t\t// 后端返回数据异常\r\n\t\t\t\tif (response.data.code != 10000) {\r\n\t\t\t\t\t// 将失败结果返回出去\r\n\t\t\t\t\tif (option.fail && typeof option.fail == 'function') {\r\n\t\t\t\t\t\toption.fail(response)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// 将成功的结果返回\r\n\t\t\t\t\tif (option.success && typeof option.success == 'function') {\r\n\t\t\t\t\t\toption.success(response.data)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// 请求失败\r\n\t\t\tfail: response => {\r\n\t\t\t\t// 关闭加载效果\r\n\t\t\t\tuni.hideLoading()\r\n\t\t\t\tconsole.log(response);\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\t// 封装加载动画函数，让页面中只存在一个loading的效果\r\n\tshowLoadingFun() {\r\n\t\t/*\r\n\t\t\t如果缓存中存在loading，则 1、隐藏加载动画 2、将缓存的值设置为false；\r\n\t\t\t不存在则为 1、不管成功失败都打开缓存的值 2、加载出错就将缓存的值设置为false\r\n\t\t*/\r\n\t\tconst isLoading = uni.getStorageSync('isShowLoading'); // 判断是否已经有加载动画在显示。\r\n\r\n\t\t// 如果已有加载动画，隐藏它并更新状态为 false\r\n\t\tif (isLoading) {\r\n\t\t\tuni.hideLoading()\r\n\t\t\tuni.setStorageSync('isShowLoading', false)\r\n\t\t}\r\n\r\n\t\t// 显示新的加载动画\r\n\t\tuni.showLoading({\r\n\t\t\ttitle: '加载中...',\r\n\t\t\tcomplete: () => {\r\n\t\t\t\t// 加载动画显示完成，标记状态为 true\r\n\t\t\t\tuni.setStorageSync('isShowLoading', true)\r\n\t\t\t},\r\n\t\t\tfail: () => {\r\n\t\t\t\t// 加载动画显示失败，标记状态为 false\r\n\t\t\t\tuni.setStorageSync('isShowLoading', false)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n}\r\nexport default new Utils()"],"names":["uni","res"],"mappings":";;AAAA,MAAM,MAAM;AAAA,EACX,cAAc;AAEb,SAAK,UAAU;AAAA,EACf;AAAA;AAAA,EAGD,cAAc;AAEbA,kBAAAA,MAAI,MAAM;AAAA,MACT,SAAS,CAAC,QAAQ;AACjBA,sBAAY,MAAA,MAAA,OAAA,4BAAA,eAAe,GAAG;AAE9B,aAAK,QAAQ;AAAA,UACZ,KAAK;AAAA,UACL,QAAQ;AAAA,UACR,MAAM;AAAA,YACL,MAAM,IAAI;AAAA,UACV;AAAA,UACD,eAAe;AAAA,UACf,SAAS,CAACC,SAAQ;AACjBD,0BAAY,MAAA,MAAA,OAAA,4BAAAC,MAAK,aAAa;AAAA,UAC9B;AAAA,UACD,MAAM,CAAC,QAAQ;AACdD,0BAAY,MAAA,MAAA,OAAA,4BAAA,KAAK,aAAa;AAAA,UAC9B;AAAA,QAEN,CAAK;AAED,aAAK,QAAQ;AAAA,UACZ,KAAK;AAAA,UACL,QAAQ;AAAA,UACR,MAAM;AAAA,YACL,MAAM,IAAI;AAAA,UACV;AAAA,UACD,eAAe;AAAA,UACf,SAAS,CAACC,SAAQ;AACjBD,0BAAY,MAAA,MAAA,OAAA,4BAAAC,MAAK,aAAa;AAAA,UAC9B;AAAA,UACD,MAAM,CAAC,QAAQ;AACdD,0BAAY,MAAA,MAAA,OAAA,4BAAA,KAAK,aAAa;AAAA,UAC9B;AAAA,QAEN,CAAK;AAAA,MAED;AAAA,IACJ,CAAG;AAAA,EACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgCD,QAAQ,SAAS;AAAA,IAChB,eAAe;AAAA,EACjB,GAAI;AAEF,QAAI,CAAC,OAAO;AAAK,aAAO;AAGxB,QAAI,OAAO,eAAe;AACzB,WAAK,eAAgB;AAAA,IACrB;AAEDA,kBAAAA,MAAI,QAAQ;AAAA,MACX,KAAK,KAAK,UAAU,OAAO;AAAA,MAC3B,MAAM,OAAO,OAAO,OAAO,OAAO,CAAE;AAAA,MACpC,QAAQ,OAAO,SAAS,OAAO,SAAS,CAAE;AAAA,MAC1C,QAAQ,OAAO,SAAS,OAAO,SAAS;AAAA;AAAA,MAExC,SAAS,CAAC,aAAa;AAEtBA,sBAAAA,MAAI,YAAa;AAEjB,YAAI,SAAS,KAAK,QAAQ,KAAO;AAEhC,cAAI,OAAO,QAAQ,OAAO,OAAO,QAAQ,YAAY;AACpD,mBAAO,KAAK,QAAQ;AAAA,UACpB;AAAA,QACN,OAAW;AAEN,cAAI,OAAO,WAAW,OAAO,OAAO,WAAW,YAAY;AAC1D,mBAAO,QAAQ,SAAS,IAAI;AAAA,UAC5B;AAAA,QACD;AAAA,MACD;AAAA;AAAA,MAED,MAAM,cAAY;AAEjBA,sBAAAA,MAAI,YAAa;AACjBA,sBAAAA,MAAA,MAAA,OAAA,6BAAY,QAAQ;AAAA,MACpB;AAAA,IACJ,CAAG;AAAA,EACD;AAAA;AAAA,EAGD,iBAAiB;AAKhB,UAAM,YAAYA,cAAAA,MAAI,eAAe,eAAe;AAGpD,QAAI,WAAW;AACdA,oBAAAA,MAAI,YAAa;AACjBA,0BAAI,eAAe,iBAAiB,KAAK;AAAA,IACzC;AAGDA,kBAAAA,MAAI,YAAY;AAAA,MACf,OAAO;AAAA,MACP,UAAU,MAAM;AAEfA,4BAAI,eAAe,iBAAiB,IAAI;AAAA,MACxC;AAAA,MACD,MAAM,MAAM;AAEXA,4BAAI,eAAe,iBAAiB,KAAK;AAAA,MACzC;AAAA,IACJ,CAAG;AAAA,EACD;AACF;AACA,MAAA,UAAe,IAAI,MAAK;;"}